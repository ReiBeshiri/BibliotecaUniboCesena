Visualization:
https://www.chartjs.org/
https://www.chartjs.org/docs/latest/developers/updates.html -> dinamic update
https://c3js.org/ --> d3.js based
	C3 is a simple wrapper around the D3.js
d3.js -> csv format e altro


Data analysis Python:
https://www.crummy.com/software/BeautifulSoup/bs4/doc/
https://selenium-python.readthedocs.io/installation.html#introduction

python:
insert into db mysql (https://pynative.com/python-mysql-insert-data-into-database-table/)

feed:
1)download con bs4 la pagina web
a)download html page o salvare il file parsato per consistenza dei dati(da tenere in un database interno) (nota2)
2)ottieni consistent data dal file parsato
3)data analysis -> strutturazione analisi e suggerimenti (es. biblioteca piena a gennaio)
b)predizione andamento (probabilmente il mese prossimo ci saranno meno posti in biblioteca)
4)client prende i dati dopo una richiesta eseguita al backend(nota1)
5)chart composition



nota1: il client(js) va a richiamare il loop ogni tot che esegue una richiesta al backend(php) che anrà a lanciare lo script py.
 Poi il client fa la request data a php, poi fa la chart (aggiornare dinamicamente il valore in rt -> funzione addData -> sotto cè il modo per selezionare la n-esima colonna sia per il data che per il color)


nota2: database mysql con xampp locale -> data(ID, data, file) -> file può essere un txt con i dati strutturati dopo aver fatto la manipolazione py
	file-> raw data -> lun(11/01/2019) 208 persone, mar(12/01/2019) 153 persone ...
			   persone in biblioteca ora -> 56
	       man data -> statistiche